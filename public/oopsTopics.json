{
    "oops": [
      {
        "topicId": 1,
        "heading": "Classes and Objects",
        "body": [
          "The collection of objects that share common properties and behavior is called class.",
          "A class can also be defined as a blueprint from which you can create an individual object.",
          "A class that is derived from another class is called a subclass.",
          "The class from which the subclass is derived is called a superclass.",
          "Class doesn't consume any space.",
          "It is a logical entity."
        ],
        "example": "public class Dog {\n  String breed;\n  int Age;\n  String color;\n  void barking () {}\n}"
      },
      {
        "topicId": 2,
        "heading": "Objects",
        "body": [
          "An object is a self-contained component that consists of methods and properties to make a particular type of data useful.",
          "An object is an instance of a class.",
          "ClassName ObjectName = new ClassName();"
        ],
        "example": "public static void main(String [] args) {\n  Dog d = new Dog();  // object created\n  d.barking();       // object called\n}"
      },
      {
        "topicId": 3,
        "heading": "Inheritance",
        "body": [
          "Inheritance is the ability to access or derive one class from another existing class.",
          "The Base class is also called a parent or superclass & the derived class is called a child class or subclass.",
          "Inheritance is achieved by using the `extends` keyword.",
          "It helps in code reuse and more simple implementation."
        ],
        "example": "class Subclass-name extends Superclass-name  {\n  //methods and fields\n}"
      },
      {
        "topicId": 4,
        "heading": "Types of Inheritance",
        "body": [
          "Single",
          "Multi-level",
          "Hierarchical",
          "Multiple",
          "Hybrid"
        ]
      },
      {
        "topicId": 5,
        "heading": "Single Inheritance",
        "body": [
          " When one class inherits another class it is called single inheritance."
        ],
        "example": "class Animal {\n  void eat() {\n    System.out.println(\"eating...\");\n  }\n}\n\nclass Dog extends Animal {\n  void bark() {\n    System.out.println(\"barking...\");\n  }\n}"
      }
      
      
    ]
  }
  